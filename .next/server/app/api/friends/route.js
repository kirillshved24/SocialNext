(()=>{var e={};e.id=917,e.ids=[917],e.modules={6037:e=>{"use strict";e.exports=require("mongoose")},846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},9428:e=>{"use strict";e.exports=require("buffer")},5511:e=>{"use strict";e.exports=require("crypto")},7910:e=>{"use strict";e.exports=require("stream")},8354:e=>{"use strict";e.exports=require("util")},2026:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>h,routeModule:()=>g,serverHooks:()=>x,workAsyncStorage:()=>w,workUnitAsyncStorage:()=>m});var s={};t.r(s),t.d(s,{GET:()=>f,POST:()=>y});var n=t(2706),o=t(8203),i=t(5994),a=t(6037),u=t.n(a);let p=new(u()).Schema({userId:{type:u().Schema.Types.ObjectId,ref:"User",required:!0},friendId:{type:u().Schema.Types.ObjectId,ref:"User",required:!0}}),c=u().models.Friend||u().model("Friend",p);var d=t(5716),l=t(8387);async function f(e){try{await (0,l.A)();let{authorization:r}=e.headers;if(!r)return new Response(JSON.stringify({error:"Токен авторизации обязателен"}),{status:401});let t=r.split(" ")[1],s=(0,d.n)(t),n=await c.find({userId:s.id}).populate("friendId");return new Response(JSON.stringify(n),{status:200})}catch(e){return new Response(JSON.stringify({error:"Ошибка получения друзей",details:e.message}),{status:401})}}async function y(e){try{await (0,l.A)();let{authorization:r}=e.headers;if(!r)return new Response(JSON.stringify({error:"Токен авторизации обязателен"}),{status:401});let t=r.split(" ")[1],s=(0,d.n)(t),{friendId:n}=await e.json();if(!n)return new Response(JSON.stringify({error:"friendId обязателен"}),{status:400});let o=new c({userId:s.id,friendId:n});return await o.save(),new Response(JSON.stringify(o),{status:201})}catch(e){return new Response(JSON.stringify({error:"Ошибка добавления друга",details:e.message}),{status:500})}}let g=new n.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/friends/route",pathname:"/api/friends",filename:"route",bundlePath:"app/api/friends/route"},resolvedPagePath:"D:\\SocialNext\\my-app\\src\\app\\api\\friends\\route.js",nextConfigOutput:"",userland:s}),{workAsyncStorage:w,workUnitAsyncStorage:m,serverHooks:x}=g;function h(){return(0,i.patchFetch)({workAsyncStorage:w,workUnitAsyncStorage:m})}},6487:()=>{},8335:()=>{},5716:(e,r,t)=>{"use strict";t.d(r,{H:()=>i,n:()=>a});var s=t(3008),n=t.n(s);let o=process.env.SECRET_KEY||"your_secret_key",i=e=>n().sign(e,o,{expiresIn:"1h"}),a=e=>{try{return n().verify(e,o)}catch(e){throw console.error("Ошибка проверки токена:",e),Error("Неверный или истекший токен")}}},8387:(e,r,t)=>{"use strict";t.d(r,{A:()=>i});var s=t(6037),n=t.n(s);let o=!1,i=async()=>{if(o){console.log("Используется существующее подключение к MongoDB");return}try{o=!!(await n().connect("mongodb+srv://kirillshved96:hsX2bhLX1uR9M8yf@socialnext.5uzui.mongodb.net/?retryWrites=true&w=majority&appName=SocialNext")).connections[0].readyState,console.log("Подключено к MongoDB")}catch(e){throw console.error("Ошибка подключения к MongoDB:",e),"ENODATA"===e.code&&console.error('Ошибка DNS. Проверьте строку подключения (MONGO_URI) и убедитесь, что ваш кластер MongoDB доступен. Если используется MongoDB Atlas, убедитесь, что вы указали правильный "cluster-url".'),e}}}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[994,604],()=>t(2026));module.exports=s})();