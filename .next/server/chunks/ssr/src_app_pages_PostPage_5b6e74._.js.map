{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/src/app/pages/PostPage/styles.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PostFormContainer = styled.div`\r\n      width: 100%;\r\n    max-width: 600px;\r\n    padding: 20px;\r\n    margin: 0 auto;\r\n    background-color: #c3a3a3;\r\n    border-radius: 10px;\r\n  \r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n\r\n`;\r\n\r\nexport const TextArea = styled.textarea`\r\n padding: 10px;\r\n    height: 100px;\r\n    border-radius: 8px;\r\n    border: 1px solid #ccc;\r\n    font-size: 16px;\r\n`;\r\n\r\nexport const RadioGroup = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Radio = styled.input`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n"],"names":[],"mappings":";;;;;;;AAAA;;AAEO,MAAM,oBAAoB,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;;;;;AAY5C,CAAC;AAEM,MAAM,WAAW,2KAAA,CAAA,UAAM,CAAC,QAAQ,CAAC;;;;;;AAMxC,CAAC;AAEM,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;AAGrC,CAAC;AAEM,MAAM,QAAQ,2KAAA,CAAA,UAAM,CAAC,KAAK,CAAC;;;;AAIlC,CAAC;AAEM,MAAM,QAAQ,2KAAA,CAAA,UAAM,CAAC,KAAK,CAAC;;;AAGlC,CAAC"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/src/app/pages/PostPage/index.jsx"],"sourcesContent":["import React, { useState } from 'react'; \r\nimport { useDispatch, useSelector } from 'react-redux'; \r\nimport { addPost, updatePost } from '../../redux/slices/postSlice';\r\nimport { Container } from '../../ui/Container'; \r\nimport { Input } from '../../ui/Input'; \r\nimport { Button } from '../../ui/Button'; \r\nimport { Title } from '../../ui/Typo'; \r\nimport * as SC from './styles'; \r\nimport { Label } from '../../ui/Label';\r\n\r\nexport const PostsPage = () => { \r\n    const [postText, setPostText] = useState(''); \r\n    const [textArea, setTextArea] = useState(''); \r\n    const [isEditing, setIsEditing] = useState(false); \r\n    const [currentPostId, setCurrentPostId] = useState(null); \r\n    const [isPublic, setIsPublic] = useState(true); \r\n\r\n    const { currentUser } = useSelector((state) => state.auth); \r\n    const dispatch = useDispatch(); \r\n\r\n    const handleAddOrUpdatePost = () => { \r\n        if (postText.trim() === '' || textArea.trim() === '') { \r\n            alert('Пост не может быть пустым'); \r\n            return;\r\n        }\r\n\r\n        if (isEditing) { \r\n            dispatch(updatePost({ id: currentPostId, text: postText, isPublic })); \r\n            setIsEditing(false); \r\n            setCurrentPostId(null); \r\n        } else {\r\n            dispatch(addPost({ \r\n                id: Date.now(),\r\n                text: postText,\r\n                textarea: textArea,\r\n                isPublic,\r\n                author: currentUser\r\n            }));\r\n        }\r\n\r\n        setPostText(''); \r\n        setTextArea(''); \r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <SC.PostFormContainer>\r\n                <Title>Создание поста</Title>\r\n                <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Введите заголовок поста\"\r\n                    value={postText}\r\n                    onChange={(e) => setPostText(e.target.value)}\r\n                />\r\n                <SC.TextArea\r\n                    type='text'\r\n                    placeholder=\"Введите текст поста\"\r\n                    value={textArea}\r\n                    onChange={(e) => setTextArea(e.target.value)}\r\n                />\r\n                <SC.RadioGroup>\r\n                    <Label>\r\n                        Общедоступный\r\n                        <SC.Radio\r\n                            type=\"radio\"\r\n                            checked={isPublic}\r\n                            onChange={() => setIsPublic(true)}\r\n                        />\r\n                    </Label>\r\n                    <Label>\r\n                        Только для друзей\r\n                        <SC.Radio\r\n                            type=\"radio\"\r\n                            checked={!isPublic}\r\n                            onChange={() => setIsPublic(false)}\r\n                        />\r\n                    </Label>\r\n                </SC.RadioGroup>\r\n                <Button onClick={handleAddOrUpdatePost}>\r\n                    {isEditing ? 'Обновить пост' : 'Добавить пост'}\r\n                </Button>\r\n            </SC.PostFormContainer>\r\n        </Container>\r\n    );\r\n};"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;;;;AANA;;;;;;;;;;;AASO,MAAM,YAAY;IACrB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI;IACzD,MAAM,WAAW,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,wBAAwB;QAC1B,IAAI,SAAS,IAAI,OAAO,MAAM,SAAS,IAAI,OAAO,IAAI;YAClD,MAAM;YACN;QACJ;QAEA,IAAI,WAAW;YACX,SAAS,WAAW;gBAAE,IAAI;gBAAe,MAAM;gBAAU;YAAS;YAClE,aAAa;YACb,iBAAiB;QACrB,OAAO;YACH,SAAS,QAAQ;gBACb,IAAI,KAAK,GAAG;gBACZ,MAAM;gBACN,UAAU;gBACV;gBACA,QAAQ;YACZ;QACJ;QAEA,YAAY;QACZ,YAAY;IAChB;IAEA,qBACI,8OAAC;kBACG,cAAA,8OAAC,0IAAG,iBAAiB;;8BACjB,8OAAC;8BAAM;;;;;;8BACP,8OAAC;oBACG,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8BAE/C,8OAAC,0IAAG,QAAQ;oBACR,MAAK;oBACL,aAAY;oBACZ,OAAO;oBACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;;;;;;8BAE/C,8OAAC,0IAAG,UAAU;;sCACV,8OAAC;;gCAAM;8CAEH,8OAAC,0IAAG,KAAK;oCACL,MAAK;oCACL,SAAS;oCACT,UAAU,IAAM,YAAY;;;;;;;;;;;;sCAGpC,8OAAC;;gCAAM;8CAEH,8OAAC,0IAAG,KAAK;oCACL,MAAK;oCACL,SAAS,CAAC;oCACV,UAAU,IAAM,YAAY;;;;;;;;;;;;;;;;;;8BAIxC,8OAAC;oBAAO,SAAS;8BACZ,YAAY,kBAAkB;;;;;;;;;;;;;;;;;AAKnD"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}