{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/src/app/pages/FriendsPage/styles.js"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\n// Общий блок для всего компонента друзей\r\nexport const FriendsBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  padding: 20px;\r\n  background-color: #f9f9f9;\r\n  border-radius: 8px;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\n// Элемент друга\r\nexport const FriendItem = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 15px;\r\n  background-color: #fff;\r\n  border-radius: 5px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n  margin-bottom: 10px;\r\n  transition: transform 0.2s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: scale(1.02);\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  strong {\r\n    color: #333;\r\n  }\r\n`;\r\n\r\n// Список доступных для добавления друзей\r\nexport const AvailableFriendsList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n  margin: 0;\r\n`;\r\n\r\n\r\nexport const Button = styled.button`\r\n  padding: 8px 12px;\r\n  border: none;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-weight: bold;\r\n  transition: background-color 0.3s;\r\n\r\n  &:hover {\r\n    background-color: #4cae4c;\r\n  }\r\n`;\r\n\r\nexport const NoAvailableFriendsMessage = styled.div`\r\n  font-style: italic;\r\n  color: #999;\r\n  padding: 15px;\r\n  text-align: center;\r\n  background-color: #fff;\r\nborder-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n`;\r\nexport const FriendsList = styled.ul`\r\n  list-style-type: none;\r\n  padding: 0;\r\n`;\r\nexport const NoFriendsMessage = styled.p`\r\n  font-style: italic;\r\n  color: #999;\r\n`;"],"names":[],"mappings":";;;;;;;;;AAAA;;AAGO,MAAM,eAAe,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;AAQvC,CAAC;AAGM,MAAM,aAAa,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;;;;;;;;;;;;AAmBrC,CAAC;AAGM,MAAM,uBAAuB,2KAAA,CAAA,UAAM,CAAC,EAAE,CAAC;;;;AAI9C,CAAC;AAGM,MAAM,SAAS,2KAAA,CAAA,UAAM,CAAC,MAAM,CAAC;;;;;;;;;;;;;AAapC,CAAC;AAEM,MAAM,4BAA4B,2KAAA,CAAA,UAAM,CAAC,GAAG,CAAC;;;;;;;;AAQpD,CAAC;AACM,MAAM,cAAc,2KAAA,CAAA,UAAM,CAAC,EAAE,CAAC;;;AAGrC,CAAC;AACM,MAAM,mBAAmB,2KAAA,CAAA,UAAM,CAAC,CAAC,CAAC;;;AAGzC,CAAC"}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/src/app/pages/FriendsPage/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addFriendToServer, fetchFriends } from '../../redux/slices/authSlice';\r\nimport { Container } from '../../ui/Container';\r\nimport { Button } from '../../ui/Button';\r\nimport { Title } from '../../ui/Typo';\r\nimport * as SC from './styles';\r\nimport { fetchUsers } from '../../api/friendsApi'; \r\n\r\nexport const FriendsPage = () => {\r\n    const [availableFriends, setAvailableFriends] = useState([]);\r\n    const { currentUser, friends } = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const loadUsers = async () => {\r\n            if (currentUser) {\r\n                console.log('Загружаем пользователей для:', currentUser.username);\r\n                try {\r\n                    const users = await fetchUsers(currentUser.username); \r\n                    console.log('Пользователи получены:', users);\r\n                    setAvailableFriends(users.filter(user => !friends.some(f => f.id === user.id)));\r\n                } catch (error) {\r\n                    console.error('Ошибка при загрузке пользователей:', error);\r\n                }\r\n            }\r\n        };\r\n\r\n        loadUsers(); \r\n\r\n        if (currentUser?.id) {\r\n            console.log('Загружаем друзей для пользователя:', currentUser.id);\r\n            dispatch(fetchFriends(currentUser.id)); \r\n        }\r\n    }, [currentUser, dispatch, friends]);\r\n\r\n    const handleAddFriend = (friendId) => {\r\n        if (currentUser) {\r\n            console.log('Добавляем друга с ID:', friendId);\r\n            dispatch(addFriendToServer({ userId: currentUser.id, friendId }))\r\n                .unwrap()\r\n                .then(() => {\r\n                    console.log('Друг успешно добавлен.');\r\n                    \r\n                    setAvailableFriends(availableFriends.filter(f => f.id !== friendId));\r\n                })\r\n                .catch((error) => {\r\n                    console.error('Ошибка при добавлении друга:', error); // Лог для отладки\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <SC.FriendsBlock>\r\n                <Title>Доступные друзья</Title>\r\n                <SC.FriendsList>\r\n                    {availableFriends.length > 0 ? (\r\n                        availableFriends.map(friend => (\r\n                            <SC.FriendItem key={friend.id}>\r\n                                {friend.username} ({friend.email})\r\n                                <Button onClick={() => handleAddFriend(friend.id)}>Добавить</Button>\r\n                            </SC.FriendItem>\r\n                        ))\r\n                    ) : (\r\n                        <SC.NoFriendsMessage>Нет доступных друзей.</SC.NoFriendsMessage>\r\n                    )}\r\n                </SC.FriendsList>\r\n            </SC.FriendsBlock>\r\n        </Container>\r\n    );\r\n};"],"names":[],"mappings":";;;;AAAA;;;;;;;;;;;;;;;;;;;;;AAMA;;;;;;AALA;;;;;;;;;;AAQO,MAAM,cAAc;IACvB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IAC3D,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD,EAAE,CAAC,QAAU,MAAM,IAAI;IAClE,MAAM,WAAW,CAAA,GAAA,8IAAA,CAAA,cAAW,AAAD;IAE3B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,YAAY;YACd,IAAI,aAAa;gBACb,QAAQ,GAAG,CAAC,gCAAgC,YAAY,QAAQ;gBAChE,IAAI;oBACA,MAAM,QAAQ,MAAM,WAAW,YAAY,QAAQ;oBACnD,QAAQ,GAAG,CAAC,0BAA0B;oBACtC,oBAAoB,MAAM,MAAM,CAAC,CAAA,OAAQ,CAAC,QAAQ,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,KAAK,EAAE;gBAChF,EAAE,OAAO,OAAO;oBACZ,QAAQ,KAAK,CAAC,sCAAsC;gBACxD;YACJ;QACJ;QAEA;QAEA,IAAI,aAAa,IAAI;YACjB,QAAQ,GAAG,CAAC,sCAAsC,YAAY,EAAE;YAChE,SAAS,aAAa,YAAY,EAAE;QACxC;IACJ,GAAG;QAAC;QAAa;QAAU;KAAQ;IAEnC,MAAM,kBAAkB,CAAC;QACrB,IAAI,aAAa;YACb,QAAQ,GAAG,CAAC,yBAAyB;YACrC,SAAS,kBAAkB;gBAAE,QAAQ,YAAY,EAAE;gBAAE;YAAS,IACzD,MAAM,GACN,IAAI,CAAC;gBACF,QAAQ,GAAG,CAAC;gBAEZ,oBAAoB,iBAAiB,MAAM,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK;YAC9D,GACC,KAAK,CAAC,CAAC;gBACJ,QAAQ,KAAK,CAAC,gCAAgC,QAAQ,kBAAkB;YAC5E;QACR;IACJ;IAEA,qBACI,8OAAC;kBACG,cAAA,8OAAC,6IAAG,YAAY;;8BACZ,8OAAC;8BAAM;;;;;;8BACP,8OAAC,6IAAG,WAAW;8BACV,iBAAiB,MAAM,GAAG,IACvB,iBAAiB,GAAG,CAAC,CAAA,uBACjB,8OAAC,6IAAG,UAAU;;gCACT,OAAO,QAAQ;gCAAC;gCAAG,OAAO,KAAK;gCAAC;8CACjC,8OAAC;oCAAO,SAAS,IAAM,gBAAgB,OAAO,EAAE;8CAAG;;;;;;;2BAFnC,OAAO,EAAE;;;;kDAMjC,8OAAC,6IAAG,gBAAgB;kCAAC;;;;;;;;;;;;;;;;;;;;;;AAM7C"}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}