{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/node_modules/react-router-dom/dist/index.mjs"],"sourcesContent":["/**\n * react-router-dom v7.1.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n\n// index.ts\nimport { HydratedRouter, RouterProvider } from \"react-router/dom\";\nexport * from \"react-router\";\nexport {\n  HydratedRouter,\n  RouterProvider\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC,GAED,WAAW","ignoreList":[0]}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/node_modules/react-router/dist/development/dom-export.mjs"],"sourcesContent":["/**\n * react-router v7.1.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  FrameworkContext,\n  RemixErrorBoundary,\n  RouterProvider,\n  createBrowserHistory,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createRouter,\n  decodeViaTurboStream,\n  deserializeErrors,\n  getPatchRoutesOnNavigationFunction,\n  getSingleFetchDataStrategy,\n  invariant,\n  mapRouteProperties,\n  matchRoutes,\n  shouldHydrateRouteLoader,\n  useFogOFWarDiscovery\n} from \"./chunk-V7UHCZHK.mjs\";\n\n// lib/dom-export/dom-router-provider.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nfunction RouterProvider2(props) {\n  return /* @__PURE__ */ React.createElement(RouterProvider, { flushSync: ReactDOM.flushSync, ...props });\n}\n\n// lib/dom-export/hydrated-router.tsx\nimport * as React2 from \"react\";\nvar ssrInfo = null;\nvar router = null;\nfunction initSsrInfo() {\n  if (!ssrInfo && window.__reactRouterContext && window.__reactRouterManifest && window.__reactRouterRouteModules) {\n    ssrInfo = {\n      context: window.__reactRouterContext,\n      manifest: window.__reactRouterManifest,\n      routeModules: window.__reactRouterRouteModules,\n      stateDecodingPromise: void 0,\n      router: void 0,\n      routerInitialized: false\n    };\n  }\n}\nfunction createHydratedRouter() {\n  initSsrInfo();\n  if (!ssrInfo) {\n    throw new Error(\n      \"You must be using the SSR features of React Router in order to skip passing a `router` prop to `<RouterProvider>`\"\n    );\n  }\n  let localSsrInfo = ssrInfo;\n  if (!ssrInfo.stateDecodingPromise) {\n    let stream = ssrInfo.context.stream;\n    invariant(stream, \"No stream found for single fetch decoding\");\n    ssrInfo.context.stream = void 0;\n    ssrInfo.stateDecodingPromise = decodeViaTurboStream(stream, window).then((value) => {\n      ssrInfo.context.state = value.value;\n      localSsrInfo.stateDecodingPromise.value = true;\n    }).catch((e) => {\n      localSsrInfo.stateDecodingPromise.error = e;\n    });\n  }\n  if (ssrInfo.stateDecodingPromise.error) {\n    throw ssrInfo.stateDecodingPromise.error;\n  }\n  if (!ssrInfo.stateDecodingPromise.value) {\n    throw ssrInfo.stateDecodingPromise;\n  }\n  let routes = createClientRoutes(\n    ssrInfo.manifest.routes,\n    ssrInfo.routeModules,\n    ssrInfo.context.state,\n    ssrInfo.context.isSpaMode\n  );\n  let hydrationData = void 0;\n  if (!ssrInfo.context.isSpaMode) {\n    hydrationData = {\n      ...ssrInfo.context.state,\n      loaderData: { ...ssrInfo.context.state.loaderData }\n    };\n    let initialMatches = matchRoutes(\n      routes,\n      window.location,\n      window.__reactRouterContext?.basename\n    );\n    if (initialMatches) {\n      for (let match of initialMatches) {\n        let routeId = match.route.id;\n        let route = ssrInfo.routeModules[routeId];\n        let manifestRoute = ssrInfo.manifest.routes[routeId];\n        if (route && manifestRoute && shouldHydrateRouteLoader(\n          manifestRoute,\n          route,\n          ssrInfo.context.isSpaMode\n        ) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\n          delete hydrationData.loaderData[routeId];\n        } else if (manifestRoute && !manifestRoute.hasLoader) {\n          hydrationData.loaderData[routeId] = null;\n        }\n      }\n    }\n    if (hydrationData && hydrationData.errors) {\n      hydrationData.errors = deserializeErrors(hydrationData.errors);\n    }\n  }\n  let router2 = createRouter({\n    routes,\n    history: createBrowserHistory(),\n    basename: ssrInfo.context.basename,\n    hydrationData,\n    mapRouteProperties,\n    dataStrategy: getSingleFetchDataStrategy(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      () => router2\n    ),\n    patchRoutesOnNavigation: getPatchRoutesOnNavigationFunction(\n      ssrInfo.manifest,\n      ssrInfo.routeModules,\n      ssrInfo.context.isSpaMode,\n      ssrInfo.context.basename\n    )\n  });\n  ssrInfo.router = router2;\n  if (router2.state.initialized) {\n    ssrInfo.routerInitialized = true;\n    router2.initialize();\n  }\n  router2.createRoutesForHMR = /* spacer so ts-ignore does not affect the right hand of the assignment */\n  createClientRoutesWithHMRRevalidationOptOut;\n  window.__reactRouterDataRouter = router2;\n  return router2;\n}\nfunction HydratedRouter() {\n  if (!router) {\n    router = createHydratedRouter();\n  }\n  let [criticalCss, setCriticalCss] = React2.useState(\n    process.env.NODE_ENV === \"development\" ? ssrInfo?.context.criticalCss : void 0\n  );\n  if (process.env.NODE_ENV === \"development\") {\n    if (ssrInfo) {\n      window.__reactRouterClearCriticalCss = () => setCriticalCss(void 0);\n    }\n  }\n  let [location, setLocation] = React2.useState(router.state.location);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router && !ssrInfo.routerInitialized) {\n      ssrInfo.routerInitialized = true;\n      ssrInfo.router.initialize();\n    }\n  }, []);\n  React2.useLayoutEffect(() => {\n    if (ssrInfo && ssrInfo.router) {\n      return ssrInfo.router.subscribe((newState) => {\n        if (newState.location !== location) {\n          setLocation(newState.location);\n        }\n      });\n    }\n  }, [location]);\n  invariant(ssrInfo, \"ssrInfo unavailable for HydratedRouter\");\n  useFogOFWarDiscovery(\n    router,\n    ssrInfo.manifest,\n    ssrInfo.routeModules,\n    ssrInfo.context.isSpaMode\n  );\n  return (\n    // This fragment is important to ensure we match the <ServerRouter> JSX\n    // structure so that useId values hydrate correctly\n    /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\n      FrameworkContext.Provider,\n      {\n        value: {\n          manifest: ssrInfo.manifest,\n          routeModules: ssrInfo.routeModules,\n          future: ssrInfo.context.future,\n          criticalCss,\n          isSpaMode: ssrInfo.context.isSpaMode\n        }\n      },\n      /* @__PURE__ */ React2.createElement(RemixErrorBoundary, { location }, /* @__PURE__ */ React2.createElement(RouterProvider2, { router }))\n    ), /* @__PURE__ */ React2.createElement(React2.Fragment, null))\n  );\n}\nexport {\n  HydratedRouter,\n  RouterProvider2 as RouterProvider\n};\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 197, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file://D%3A/progectnext/my-app/node_modules/react-router/dist/development/index.mjs"],"sourcesContent":["/**\n * react-router v7.1.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport {\n  Action,\n  Await,\n  BrowserRouter,\n  DataRouterContext,\n  DataRouterStateContext,\n  ErrorResponseImpl,\n  FetchersContext,\n  Form,\n  FrameworkContext,\n  HashRouter,\n  HistoryRouter,\n  IDLE_BLOCKER,\n  IDLE_FETCHER,\n  IDLE_NAVIGATION,\n  Link,\n  Links,\n  LocationContext,\n  MemoryRouter,\n  Meta,\n  NavLink,\n  Navigate,\n  NavigationContext,\n  Outlet,\n  PrefetchPageLinks,\n  RemixErrorBoundary,\n  Route,\n  RouteContext,\n  Router,\n  RouterProvider,\n  Routes,\n  Scripts,\n  ScrollRestoration,\n  ServerMode,\n  ServerRouter,\n  SingleFetchRedirectSymbol,\n  StaticRouter,\n  StaticRouterProvider,\n  ViewTransitionContext,\n  createBrowserHistory,\n  createBrowserRouter,\n  createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut,\n  createCookie,\n  createCookieSessionStorage,\n  createHashRouter,\n  createMemoryRouter,\n  createMemorySessionStorage,\n  createPath,\n  createRequestHandler,\n  createRouter,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  createRoutesStub,\n  createSearchParams,\n  createSession,\n  createSessionStorage,\n  createStaticHandler,\n  createStaticRouter,\n  data,\n  decodeViaTurboStream,\n  deserializeErrors,\n  generatePath,\n  getPatchRoutesOnNavigationFunction,\n  getSingleFetchDataStrategy,\n  invariant,\n  isCookie,\n  isRouteErrorResponse,\n  isSession,\n  mapRouteProperties,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  replace,\n  resolvePath,\n  setDevServerHooks,\n  shouldHydrateRouteLoader,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBeforeUnload,\n  useBlocker,\n  useFetcher,\n  useFetchers,\n  useFogOFWarDiscovery,\n  useFormAction,\n  useHref,\n  useInRouterContext,\n  useLinkClickHandler,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  usePrompt,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n  useScrollRestoration,\n  useSearchParams,\n  useSubmit,\n  useViewTransitionState\n} from \"./chunk-V7UHCZHK.mjs\";\nexport {\n  Await,\n  BrowserRouter,\n  Form,\n  HashRouter,\n  IDLE_BLOCKER,\n  IDLE_FETCHER,\n  IDLE_NAVIGATION,\n  Link,\n  Links,\n  MemoryRouter,\n  Meta,\n  NavLink,\n  Navigate,\n  Action as NavigationType,\n  Outlet,\n  PrefetchPageLinks,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  Scripts,\n  ScrollRestoration,\n  ServerRouter,\n  StaticRouter,\n  StaticRouterProvider,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  ErrorResponseImpl as UNSAFE_ErrorResponseImpl,\n  FetchersContext as UNSAFE_FetchersContext,\n  FrameworkContext as UNSAFE_FrameworkContext,\n  LocationContext as UNSAFE_LocationContext,\n  NavigationContext as UNSAFE_NavigationContext,\n  RemixErrorBoundary as UNSAFE_RemixErrorBoundary,\n  RouteContext as UNSAFE_RouteContext,\n  ServerMode as UNSAFE_ServerMode,\n  SingleFetchRedirectSymbol as UNSAFE_SingleFetchRedirectSymbol,\n  ViewTransitionContext as UNSAFE_ViewTransitionContext,\n  createBrowserHistory as UNSAFE_createBrowserHistory,\n  createClientRoutes as UNSAFE_createClientRoutes,\n  createClientRoutesWithHMRRevalidationOptOut as UNSAFE_createClientRoutesWithHMRRevalidationOptOut,\n  createRouter as UNSAFE_createRouter,\n  decodeViaTurboStream as UNSAFE_decodeViaTurboStream,\n  deserializeErrors as UNSAFE_deserializeErrors,\n  getPatchRoutesOnNavigationFunction as UNSAFE_getPatchRoutesOnNavigationFunction,\n  getSingleFetchDataStrategy as UNSAFE_getSingleFetchDataStrategy,\n  invariant as UNSAFE_invariant,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  shouldHydrateRouteLoader as UNSAFE_shouldHydrateRouteLoader,\n  useFogOFWarDiscovery as UNSAFE_useFogOFWarDiscovery,\n  useScrollRestoration as UNSAFE_useScrollRestoration,\n  createBrowserRouter,\n  createCookie,\n  createCookieSessionStorage,\n  createHashRouter,\n  createMemoryRouter,\n  createMemorySessionStorage,\n  createPath,\n  createRequestHandler,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  createRoutesStub,\n  createSearchParams,\n  createSession,\n  createSessionStorage,\n  createStaticHandler,\n  createStaticRouter,\n  data,\n  generatePath,\n  isCookie,\n  isRouteErrorResponse,\n  isSession,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  replace,\n  resolvePath,\n  HistoryRouter as unstable_HistoryRouter,\n  setDevServerHooks as unstable_setDevServerHooks,\n  usePrompt as unstable_usePrompt,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBeforeUnload,\n  useBlocker,\n  useFetcher,\n  useFetchers,\n  useFormAction,\n  useHref,\n  useInRouterContext,\n  useLinkClickHandler,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n  useSearchParams,\n  useSubmit,\n  useViewTransitionState\n};\n"],"names":[],"mappings":"AAAA;;;;;;;;;CASC","ignoreList":[0]}},
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}